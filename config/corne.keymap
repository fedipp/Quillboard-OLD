/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_de.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LG(LC(DE_Q))  &kp DE_Q  &kp DE_W  &kp DE_E  &kp DE_R  &kp DE_T          &kp DE_Z  &kp DE_U  &kp DE_I      &kp DE_O       &kp DE_P         &kp DE_U_UMLAUT               
&kp ESC           &kp DE_A  &kp DE_S  &kp DE_D  &kp DE_F  &kp DE_G          &kp DE_H  &kp DE_J  &kp DE_K      &kp DE_L       &kp DE_O_UMLAUT  &kp DE_A_UMLAUT
&lt 3 TAB         &kp DE_Z  &kp DE_X  &kp DE_C  &kp DE_V  &kp DE_B          &kp DE_N  &kp DE_M  &kp DE_COMMA  &kp DE_PERIOD  &kp DE_ESZETT    &kp DE_ACUTE
                    &mt LALT LC(LEFT)  &mt LSHIFT DEL  &lt 2 SPACE          &lt 1 ENTER   &mt LCMD BSPC    &mt LCTRL LC(RIGHT)
            >;
        };

        nav_layer {
            bindings = <
&kp LS(DE_CARET)  &kp DE_EXCL  &kp DE_DQT           &kp DE_SECT  &kp DE_DOLLAR  &kp DE_PERCENT         &kp DE_AMPS   &kp DE_SLASH  &kp UP    &kp DE_BSLH  &kp DE_EQUAL   &kp DE_QMARK          
&trans            &kp DE_LT    &kp LS(LA(DE_W))  &kp DE_LBKT  &kp DE_LPAR    &kp DE_LBRC               &kp LA(LEFT)  &kp LEFT      &kp DOWN  &kp RIGHT    &kp LA(RIGHT)  &kp BSPC  
&trans            &kp DE_GT    &kp LA(DE_N2)     &kp DE_RBKT  &kp DE_RPAR    &kp DE_RBRC               &kp HOME      &kp PGUP      &kp PGDN  &kp END      &kp LA(BSPC)   &kp DEL
                                                 &trans       &trans         &trans                    &trans        &trans        &trans
            >;
        };

        num_layer {
            bindings = <
&kp DE_CARET  &kp DE_N1     &kp DE_N2     &kp DE_N3     &kp DE_N4     &kp DE_N5                &kp DE_N6      &kp DE_N7   &kp DE_N8  &kp DE_N9  &kp DE_N0     &kp LA(DE_COMMA)
&trans        &kp DE_SLASH  &kp DE_STAR   &kp DE_MINUS  &kp DE_PLUS   &kp LA(LS(DE_N9))        &kp DE_COMMA   &kp DE_N4   &kp DE_N5  &kp DE_N6  &kp DE_EQUAL  &kp BSPC
&trans        &kp LA(DE_V)  &kp DE_TILDE  &kp DE_SQT    &kp DE_POUND  &kp LA(DE_X)             &kp DE_PERIOD  &kp DE_N1   &kp DE_N2  &kp DE_N3  &kp LA(BSPC)  &kp DEL
                                          &trans        &trans        &trans                   &trans         &mt LCMD DE_N0    &trans
            >;
        };

 fn_layer {
            bindings = <
&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5    &bt BT_CLR               &kp C_PREV     &kp C_PP      &kp C_NEXT  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP      
&kp F1        &kp F2        &kp F3          &kp F4          &kp F5          &kp F6                   &kp F7         &kp F8        &kp F9      &kp F10     &kp F11            &kp F12
&trans        &none         &kp LG(LS(N5))  &kp LG(LS(N3))  &kp LG(LS(N4))  &none                    &kp C_BRI_DN   &kp C_BRI_UP  &kp F21     &kp F22     &kp F23            &kp F24
                                            &trans          &trans          &trans                   &trans         &trans      &trans
            >;
        };
    };
};
